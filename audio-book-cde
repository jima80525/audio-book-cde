#/bin/sh
###############################################################################
# (C) Copyright 2014 Jim Anderson
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Contributors:
#     Jim Anderson
###############################################################################
# This is a bit of a hack.  If you look at this and go "that's a dumb way to do
# this" please notify me on what the better way is.
#
# The basic hack is to use abcde in the 'local cddb' mode and have it create a
# cddb info file for the disc.  Then we use sed to edit that file with the
# values we want for artist and album (which is all I care about).
# Once that's done, it starts up abcde again to rip with those values.

###############################################################################
# rip_cd
# Does the actual work with abcde and sed to rip the current cd.
#
# parameters:
# $1 - author
# $2 - book
# $3 - disc number
# $4 - conf file name
###############################################################################
function rip_cd () {
   # first tell abcde to create the local cddb file without accessing cddb
   abcde -n -a cddb -c $4

   # Change the artist and album names to the parameters passed in
   sed -i -e "s/Unknown Artist/$1/" abcde.*/cddbread.0
   sed -i -e "s/Unknown Album/$2-Disc-$3/" abcde.*/cddbread.0

   # run abcde to rip the disc.
   abcde -n -x -a read,encode,move,clean -c $4
}

###############################################################################
# is_tray_open
# uses python to send ioctl to determine if cd tray is open.
###############################################################################
function is_tray_open() {
   # copied and modified from:
   # https://stackoverflow.com/questions/18580421/determining-when-cd-drawer-has-been-closed
    python -c 'import os, sys, fcntl
dev = "/dev/cdrom"
try:
    fd = os.open(dev, os.O_RDONLY|os.O_NONBLOCK)
except:
    sys.stderr.write("Failed to open device " + dev + ".\n")
    exit(2)
r = fcntl.ioctl(fd, 0x5326, 0)
os.close(fd)
if r <= 0:
   sys.stderr.write("Failed IOCTL " + str(r) + "\n")
   exit(0)
elif r == 4:
   exit(1)
exit(0)
' "$1"
}


###############################################################################
# wait_for_cd
# Sleep-loops until a CD is inserted and recognized by /dev/cdrom
###############################################################################
function wait_for_cd () {
   if is_tray_open ; then
      echo disc open - waiting for new CD...
   fi
   while is_tray_open ; do
      sleep 1
   done
}

###############################################################################
# write_default_conf_file
# writes default abcde settings to the specified file
#
# Parameters
# $1 - file name
###############################################################################
function write_default_conf_file () {
cat <<EOF > $1
# Specify the encoder to use for MP3. In this case 'lame':
MP3ENCODERSYNTAX=lame 

# Specify the path to the selected encoder. In most cases the encoder
# should be in your $PATH as I illustrate below, otherwise you will 
# need to specify the full path. For example: /usr/bin/lame
LAME=lame

# Specify your required encoding options here. Multiple options can
# be selected as '--preset standard --another-option' etc.
# The '-V 2' option gives VBR encoding between 170-210 kbits/s.
LAMEOPTS='-V 2' 
   
# Output type for MP3.
OUTPUTTYPE="mp3"

# set the output directory structure
OUTPUTFORMAT='\${ARTISTFILE}/\${ALBUMFILE}/\${TRACKNUM}.\${TRACKFILE}'

# Don't want prompts, just rip the discs
INTERACTIVE=n

# Don't try to go to the CDDB server
CDDBUSELOCAL=y
EOF
}

###############################################################################
# Main script starts here
###############################################################################
# all three parameters are required
if [ $# -lt 3 ]; then
   echo "Usage: $0 author book number_of_discs [abcde conf file name]"
   exit 1
fi

# third parameter must be an integer
if ! [ "$3" -eq "$3" ] 2>/dev/null; then
   echo "Usage: $0 author book number_of_discs [abcde conf file name]"
   echo "       'number_of_discs' must be an integer"
   exit 1
fi

# if fourth paramter exists, it's the conf file to use,  If it's not there,
# create a default conf file
if [ $# -lt 4 ]; then
   CONFFILE=audio_book_cde_default.conf
   ERASECONFFILE=1
   write_default_conf_file $CONFFILE
else
   # conf filename specified on command line - use that and do not delete it
   CONFFILE=$4
   ERASECONFFILE=0
fi

# rip each disc in order
for i in `seq 1 $3`; do
   echo "Ripping $1 - $2 - Disc $i"
   wait_for_cd
   rip_cd "$1" "$2" $i $CONFFILE
done

# finally, if we created a temp conf file, remove it
if [ $ERASECONFFILE -eq 1 ] ; then
   echo "Erasing config file $CONFFILE"
   rm $CONFFILE
fi

